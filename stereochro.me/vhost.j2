# Page redirects
map $uri $canthack_page_slug {
	/about/ about;
	/ideas/ananagyu/ ananagyu;
	/ideas/the-weave/ conlanging;
}

# Weblog redirects.
map $uri $canthack_blog_slug {
	/ideas/debian-merging-isos/ debian-merging-isos;
	/ideas/detecting-broken-images-js/ detecting-broken-images-js;
	/ideas/discouraging-clientelism/ discouraging-clientelism;
	/ideas/formkeys/ formkeys;
	/ideas/global-in-python/ global-in-python;
	/ideas/language-learning/ language-learning;
	/ideas/mosml-pt1/ mosml-pt1;
	/ideas/package-management/ package-management;
	/ideas/rpm-for-the-unwilling/ rpm-for-the-unwilling;
	/ideas/sql-gotchas/ sql-gotchas;
	/ideas/type-vs-isinstance/ type-vs-isinstance;
}

server {
	include common_params;
	include ssl_params;

	server_name {{ domain_name }};
	root {{ vhosts_root }}/{{ domain_name }}/web;
	index index.html;

	rewrite "^/weblog/(%3b|;)feed" https://talideon.com/inklings/feed permanent;
	rewrite "^/weblog(.*)$" https://talideon.com/inklings$1 permanent;

	location = /projects/ { return 301 https://github.com/kgaughan?tab=repositories; }
	location = /projects/elementnode/ { return 301 https://github.com/kgaughan/elementnode; }
	location = /snippets/talideon-wallpaper/ { return 301 https://gist.github.com/kgaughan/d1180cf7bf4adebeaf6498ff499400d0; }
	if ($canthack_page_slug) {
		return 301 https://i.canthack.it/pages/$canthack_page_slug.html;
	}
	if ($canthack_blog_slug) {
		return 301 https://i.canthack.it/$canthack_blog_slug.html;
	}

	add_header Content-Security-Policy "default-src 'self'; img-src https://d-badges.ipv6ready.ie 'self'; script-src 'unsafe-inline' 'self'; style-src https://fonts.googleapis.com 'unsafe-inline' 'self'; font-src https://fonts.gstatic.com 'self'" always;

	ssl_certificate {{ tls_root }}/{{ domain_name }}/fullchain.pem;
	ssl_certificate_key {{ tls_root }}/private/{{ domain_name }}.pem;

	access_log {{ logs_root }}/{{ domain_name }}.access.log combined;
	error_log {{ logs_root }}/{{ domain_name }}.error.log;
}

server {
	include common_params;
	include ssl_params;

	server_name www.{{ domain_name }};
	return 301 https://{{ domain_name }}$request_uri;

	ssl_certificate {{ tls_root }}/{{ domain_name }}/fullchain.pem;
	ssl_certificate_key {{ tls_root }}/private/{{ domain_name }}.pem;
}

server {
	include common_params;

	listen 80;
	listen [::]:80;

	server_name .{{ domain_name }};
	return 301 https://{{ domain_name }}$request_uri;
}
