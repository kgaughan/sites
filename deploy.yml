---
- name: build {{ domain_name }}
  hosts: localhost
  become: false
  gather_facts: false

  tasks:
    - stat:
        path: "sites/{{ domain_name }}/mkdocs.yml"
      register: stat

    - meta: end_play
      when: not stat.stat.exists

    - tempfile:
        state: directory
      register: local_tmp

    # To persist across plays.
    - set_fact:
        build_dir: "{{ local_tmp.path }}"

    - shell: mkdocs build --strict --site-dir {{ local_tmp.path }}
      args:
        chdir: "sites/{{ domain_name }}"

- name: deploy {{ domain_name }}
  hosts: all
  remote_user: keith
  become: true
  gather_facts: false

  vars:
    ansible_python_interpreter: /usr/local/bin/python3

    # domain_name comes in from the invocation.
    vhosts_root: /usr/local/www
    webserver_config_root: /usr/local/etc/nginx
    logs_root: /var/log/www
    tls_root: /usr/local/etc/ssl/acme

  tasks:
    - name: ensure web site root directory exists
      file:
        dest: '{{ vhosts_root }}/{{ domain_name }}/web'
        state: directory
        owner: keith
        group: www
        mode: 0755

    - name: check for custom vhost config
      local_action: stat path="sites/{{ domain_name }}/vhost.j2"
      become: false
      register: st

    - name: copy up custom vhost config
      template:
        src: "sites/{{ domain_name }}/vhost.j2"
        dest: '{{ webserver_config_root }}/vhosts/{{ domain_name }}'
      when: st.stat.exists
      notify:
        - reload nginx

    - name: copy up generic vhost config
      template:
        src: vhost.conf.j2
        dest: '{{ webserver_config_root }}/vhosts/{{ domain_name }}'
      when: not st.stat.exists
      notify:
        - reload nginx

    - name: copy up site
      synchronize:
        src: "{{ hostvars.localhost.build_dir }}/"
        dest: "{{ vhosts_root }}/{{ domain_name }}/web"
        group: false
        owner: false
        perms: false
        delete: true
      when: hostvars.localhost.build_dir is defined

  handlers:
    - name: reload nginx
      service:
        name: nginx
        state: reloaded
      ignore_errors: true
