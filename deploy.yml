---
- name: deploy {{ domain_name }}
  hosts: all
  remote_user: keith
  become: yes
  gather_facts: false

  vars:
    ansible_python_interpreter: /usr/local/bin/python

    # domain_name comes in from the invocation.
    vhosts_root: /usr/local/www
    webserver_config_root: /usr/local/etc/nginx
    tls_root: /usr/local/etc/ssl/acme
    logs_root: /var/logs/www

  tasks:
    - name: check the site exists
      local_action:
        module: stat
        path: "sites/{{ domain_name }}/mkdocs.yml"
      register: stat

    - assert:
        that: stat.stat.exists
        msg: "{{ stat.stat.path }} does not exist."

    - local_action: tempfile state=directory
      register: local_tmp

    - name: build {{ domain_name }}
      local_action: shell mkdocs build --strict --site-dir {{ local_tmp.path }}
      args:
        chdir: "sites/{{ domain_name }}"

    - name: ensure target directories exist
      file:
        dest: '{{ item }}'
        state: directory
      with_items:
        - '{{ vhosts_root }}/{{ domain_name }}/web'
        - '{{ webserver_config_root }}/vhosts'
        - '{{ logs_root }}'

    - name: copy up vhost config
      template:
        src: vhost.conf.j2
        dest: '{{ webserver_config_root }}/vhosts'
      notify:
        - reload nginx

    - name: copy up site
      local_action: shell rsync --recursive --delete-after --exclude-from=exclusions --progress "{{ local_tmp.path }}/" "{{ inventory_hostname }}:{{ vhosts_root }}/{{ domain_name }}/web"

  handlers:
    - name: reload nginx
      service:
        name: nginx
        state: reloaded
